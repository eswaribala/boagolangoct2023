basePath: /
definitions:
  stores.VMConfiguration:
    properties:
      access_key:
        type: string
      cpu_count:
        type: integer
      instance_type:
        type: string
      provider:
        type: string
      ram:
        type: string
      regions:
        type: string
      secret_key:
        type: string
      vm_name:
        type: string
    type: object
host: localhost:7072
info:
  contact:
    email: parameswaribala@gmail.com
    name: API Support
  description: This is api service for managing VM Configuration
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: VMConfiguration API
  version: "1.0"
paths:
  /vminstances/v1.0:
    get:
      consumes:
      - application/json
      description: Get details of all vmInstances
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/stores.VMConfiguration'
            type: array
      summary: Get details of all vmInstances
      tags:
      - vminstances
    post:
      consumes:
      - application/json
      description: Save a new vminstance with the input payload
      parameters:
      - description: Create vmInstance
        in: body
        name: vmInstance
        required: true
        schema:
          $ref: '#/definitions/stores.VMConfiguration'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/stores.VMConfiguration'
      summary: Save a new VM Instance
      tags:
      - vminstances
    put:
      consumes:
      - application/json
      description: Update existing vmInstance with the input vmInstance
      parameters:
      - description: Create customer
        in: body
        name: vmInstance
        required: true
        schema:
          $ref: '#/definitions/stores.VMConfiguration'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/stores.VMConfiguration'
      summary: Update existing vmInstance
      tags:
      - vminstances
  /vminstances/v1.0/{vmName}:
    delete:
      consumes:
      - application/json
      description: Delete vmInstance by name
      parameters:
      - description: VMName of the VMConfiguration
        in: path
        name: vmName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/stores.VMConfiguration'
      summary: Delete vmInstance
      tags:
      - vminstances
    get:
      consumes:
      - application/json
      description: Get details of vmInstance by name
      parameters:
      - description: VMName of the VMInstance
        in: path
        name: vmName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/stores.VMConfiguration'
      summary: Get details of  vmInstance by name
      tags:
      - vminstances
swagger: "2.0"
